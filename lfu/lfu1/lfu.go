package lfu1

import (
	"container/list"
	"fmt"
	"log"
)

type LFUCache struct {
	keyMap  map[int]*list.Element
	freqMap map[int]*list.List
	cap     int
	minFreq int
}

type KV struct {
	Key   int
	Value int
	Times int
}

func init() {
	log.SetFlags(log.Ldate | log.Ltime | log.Lshortfile | log.LstdFlags)
}

func Constructor(capacity int) LFUCache {
	lfu := LFUCache{
		keyMap:  map[int]*list.Element{},
		freqMap: map[int]*list.List{},
		cap:     capacity,
		minFreq: 1,
	}
	lfu.freqMap[1] = list.New()
	lfu.freqMap[2] = list.New()
	return lfu
}

func (this *LFUCache) Get(key int) int {
	this.Debug()
	fmt.Print(` get [`, key, `] `)
	if this.cap == 0 {
		return -1
	}

	v, ok := this.keyMap[key]
	if !ok {
		return -1
	}

	l1 := this.freqMap[v.Value.(*KV).Times]
	//log.Println(l1.Len())
	l1.Remove(v)
	//log.Println(l1.Len())

	if l1.Len() == 0 && this.minFreq == v.Value.(*KV).Times {
		this.minFreq = v.Value.(*KV).Times + 1
	}

	v.Value.(*KV).Times++

	l1 = this.freqMap[v.Value.(*KV).Times]
	if l1 == nil {
		l1 = list.New()
		this.freqMap[v.Value.(*KV).Times] = l1
	}
	newElement := l1.PushFront(v.Value.(*KV))
	this.keyMap[key] = newElement
	return v.Value.(*KV).Value
}

func (this *LFUCache) Put(key int, value int) {
	this.Debug()
	fmt.Print(` put  [ `, key, `:`, value, `] `)

	if this.cap == 0 {
		return
	}

	v, ok := this.keyMap[key]
	if !ok {
		if len(this.keyMap) == this.cap {
			//删除 最少使用 最不常使用的
			l1 := this.freqMap[this.minFreq]
			if l1 == nil {
				panic(` l1 == nil `)
			}
			element := l1.Back()
			//log.Println(l1.Len())
			l1.Remove(element)
			//log.Println(l1.Len())
			delete(this.keyMap, element.Value.(*KV).Key)
		}

		//添加新元素
		l1 := this.freqMap[1]
		if l1 == nil {
			l1 = list.New()
			this.freqMap[1] = l1
		}
		element := l1.PushFront(&KV{Key: key, Value: value, Times: 1})
		this.keyMap[key] = element
		this.minFreq = 1
		return
	}

	//老元素 ，设置新的值
	l1 := this.freqMap[v.Value.(*KV).Times]
	l1.Remove(v)

	if l1.Len() == 0 && this.minFreq == v.Value.(*KV).Times {
		this.minFreq = v.Value.(*KV).Times + 1
	}

	v.Value.(*KV).Times++
	v.Value.(*KV).Value = value

	l1 = this.freqMap[v.Value.(*KV).Times]
	if l1 == nil {
		l1 = list.New()
		this.freqMap[v.Value.(*KV).Times] = l1
	}

	//这里将 *kv 放入链表，
	newElement := l1.PushFront(v.Value.(*KV))

	//
	this.keyMap[key] = newElement

	return
}

func (this *LFUCache) Debug() {
	fmt.Print(` key: `)

	//for key, v := range this.keyMap {
	//	fmt.Print(` [`, key, v.Value.(*KV).Times, `] `)
	//	//fmt.Print(` [`, key, `] `)
	//}
	//
	//fmt.Print(` minfreq: `)
	//fmt.Printf(` (%d) `, this.minFreq)
	//
	//l := this.freqMap[this.minFreq]
	//n := l.Front()
	//for n != nil {
	//	fmt.Print(` [`, n.Value.(*KV).Key, `] `)
	//	n = n.Next()
	//}
	//
	//fmt.Printf(` (%d) `, 2)
	//
	//l = this.freqMap[2]
	//n = l.Front()
	//for n != nil {
	//	fmt.Print(` [`, n.Value.(*KV).Key, `] `)
	//	n = n.Next()
	//}

	for i := 20; i >= 1; i-- {
		l := this.freqMap[i]
		if l == nil {
			continue
		}
		n := l.Front()
		for n != nil {
			fmt.Print(` [`, n.Value.(*KV).Key, ` `, n.Value.(*KV).Times, `] `)
			n = n.Next()
		}
	}

	fmt.Println()

	//for key, value := range this.freqMap {
	//	fmt.Print(` freq `, key)
	//
	//	n := value.Front()
	//	for n != nil {
	//		fmt.Print(` n `, n.Value)
	//		n = n.Next()
	//	}
	//}
	//fmt.Println()
	//fmt.Println(` minFreq `, this.minFreq)

}

/*

 key:  minfreq:  (1)
 put  [ 10:13]  key:  [10 1]  minfreq:  (1)  [10]
 put  [ 3:17]  key:  [10 1]  [3 1]  minfreq:  (1)  [3]  [10]
 put  [ 6:11]  key:  [10 1]  [3 1]  [6 1]  minfreq:  (1)  [6]  [3]  [10]
 put  [ 10:5]  key:  [10 2]  [3 1]  [6 1]  minfreq:  (1)  [6]  [3]
 put  [ 9:10]  key:  [6 1]  [9 1]  [10 2]  [3 1]  minfreq:  (1)  [9]  [6]  [3]
 get [13]  key:  [10 2]  [3 1]  [6 1]  [9 1]  minfreq:  (1)  [9]  [6]  [3]
 put  [ 2:19]  key:  [9 1]  [2 1]  [10 2]  [3 1]  [6 1]  minfreq:  (1)  [2]  [9]  [6]  [3]
 get [2]  key:  [10 2]  [3 1]  [6 1]  [9 1]  [2 2]  minfreq:  (1)  [9]  [6]  [3]
 get [3]  key:  [3 2]  [6 1]  [9 1]  [2 2]  [10 2]  minfreq:  (1)  [9]  [6]
 put  [ 5:25]  key:  [5 1]  [10 2]  [3 2]  [6 1]  [9 1]  [2 2]  minfreq:  (1)  [5]  [9]  [6]
 get [8]  key:  [6 1]  [9 1]  [2 2]  [5 1]  [10 2]  [3 2]  minfreq:  (1)  [5]  [9]  [6]
 put  [ 9:22]  key:  [10 2]  [3 2]  [6 1]  [9 2]  [2 2]  [5 1]  minfreq:  (1)  [5]  [6]
 put  [ 5:5]  key:  [3 2]  [6 1]  [9 2]  [2 2]  [5 2]  [10 2]  minfreq:  (1)  [6]
 put  [ 1:30]  key:  [10 2]  [3 2]  [6 1]  [9 2]  [2 2]  [5 2]  [1 1]  minfreq:  (1)  [1]  [6]
 get [11]  key:  [6 1]  [9 2]  [2 2]  [5 2]  [1 1]  [10 2]  [3 2]  minfreq:  (1)  [1]  [6]
 put  [ 9:12]  key:  [10 2]  [3 2]  [6 1]  [9 3]  [2 2]  [5 2]  [1 1]  minfreq:  (1)  [1]  [6]
 get [7]  key:  [10 2]  [3 2]  [6 1]  [9 3]  [2 2]  [5 2]  [1 1]  minfreq:  (1)  [1]  [6]
 get [5]  key:  [9 3]  [2 2]  [5 3]  [1 1]  [10 2]  [3 2]  [6 1]  minfreq:  (1)  [1]  [6]
 get [8]  key:  [1 1]  [10 2]  [3 2]  [6 1]  [9 3]  [2 2]  [5 3]  minfreq:  (1)  [1]  [6]
 get [9]  key:  [3 2]  [6 1]  [9 4]  [2 2]  [5 3]  [1 1]  [10 2]  minfreq:  (1)  [1]  [6]
 put  [ 4:30]  key:  [1 1]  [4 1]  [10 2]  [3 2]  [6 1]  [9 4]  [2 2]  [5 3]  minfreq:  (1)  [4]  [1]  [6]
 put  [ 9:3]  key:  [5 3]  [1 1]  [4 1]  [10 2]  [3 2]  [6 1]  [9 5]  [2 2]  minfreq:  (1)  [4]  [1]  [6]
 get [9]  key:  [2 2]  [5 3]  [1 1]  [4 1]  [10 2]  [3 2]  [6 1]  [9 6]  minfreq:  (1)  [4]  [1]  [6]
 get [10]  key:  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  [10 3]  [3 2]  [6 1]  minfreq:  (1)  [4]  [1]  [6]
 get [10]  key:  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  [10 4]  [3 2]  [6 1]  minfreq:  (1)  [4]  [1]  [6]
 put  [ 6:14]  key:  [5 3]  [1 1]  [4 1]  [10 4]  [3 2]  [6 2]  [9 6]  [2 2]  minfreq:  (1)  [4]  [1]
 put  [ 3:1]  key:  [4 1]  [10 4]  [3 3]  [6 2]  [9 6]  [2 2]  [5 3]  [1 1]  minfreq:  (1)  [4]  [1]
 get [3]  key:  [3 4]  [6 2]  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  [10 4]  minfreq:  (1)  [4]  [1]
 put  [ 10:11]  key:  [4 1]  [10 5]  [3 4]  [6 2]  [9 6]  [2 2]  [5 3]  [1 1]  minfreq:  (1)  [4]  [1]
 get [8]  key:  [6 2]  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  [10 5]  [3 4]  minfreq:  (1)  [4]  [1]
 put  [ 2:14]  key:  [3 4]  [6 2]  [9 6]  [2 3]  [5 3]  [1 1]  [4 1]  [10 5]  minfreq:  (1)  [4]  [1]
 get [1]  key:  [6 2]  [9 6]  [2 3]  [5 3]  [1 2]  [4 1]  [10 5]  [3 4]  minfreq:  (1)  [4]
 get [5]  key:  [3 4]  [6 2]  [9 6]  [2 3]  [5 4]  [1 2]  [4 1]  [10 5]  minfreq:  (1)  [4]
 get [4]  key:  [5 4]  [1 2]  [4 2]  [10 5]  [3 4]  [6 2]  [9 6]  [2 3]  minfreq:  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 11:4]  key:  [9 6]  [2 3]  [1 2]  [4 2]  [11 1]  [10 5]  [6 2]  [3 4]  [5 4]  minfreq:  (1)  [11]
 put  [ 12:24]  key:  [3 4]  [5 4]  [4 2]  [11 1]  [12 1]  [10 5]  [6 2]  [9 6]  [2 3]  [1 2]  minfreq:  (1)  [12]  [11]
 put  [ 5:18]  key:  [3 4]  [5 5]  [10 5]  [6 2]  [9 6]  [2 3]  [1 2]  [4 2]  [11 1]  [12 1]  minfreq:  (1)  [12]  [11]
 get [13]  key:  [2 3]  [1 2]  [4 2]  [11 1]  [12 1]  [10 5]  [6 2]  [9 6]  [3 4]  [5 5]  minfreq:  (1)  [12]  [11]
 put  [ 7:23]  key:  [3 4]  [5 5]  [7 1]  [10 5]  [6 2]  [9 6]  [2 3]  [1 2]  [4 2]  [12 1]  minfreq:  (1)  [7]  [12]
 get [8]  key:  [7 1]  [3 4]  [5 5]  [9 6]  [2 3]  [1 2]  [4 2]  [12 1]  [10 5]  [6 2]  minfreq:  (1)  [7]  [12]
 get [12]  key:  [2 3]  [1 2]  [4 2]  [12 2]  [10 5]  [6 2]  [9 6]  [3 4]  [5 5]  [7 1]  minfreq:  (1)  [7]
 put  [ 3:27]  key:  [3 5]  [5 5]  [7 1]  [2 3]  [1 2]  [4 2]  [12 2]  [10 5]  [6 2]  [9 6]  minfreq:  (1)  [7]
 put  [ 2:12]  key:  [12 2]  [10 5]  [6 2]  [9 6]  [2 4]  [1 2]  [4 2]  [3 5]  [5 5]  [7 1]  minfreq:  (1)  [7]
 get [5]  key:  [3 5]  [5 6]  [7 1]  [1 2]  [4 2]  [12 2]  [10 5]  [6 2]  [9 6]  [2 4]  minfreq:  (1)  [7]
 put  [ 2:9]  key:  [1 2]  [4 2]  [12 2]  [10 5]  [6 2]  [9 6]  [2 5]  [3 5]  [5 6]  [7 1]  minfreq:  (1)  [7]
 put  [ 13:4]  key:  [3 5]  [5 6]  [13 1]  [12 2]  [10 5]  [6 2]  [9 6]  [2 5]  [1 2]  [4 2]  minfreq:  (1)  [13]
 put  [ 8:18]  key:  [3 5]  [5 6]  [4 2]  [8 1]  [12 2]  [10 5]  [6 2]  [9 6]  [2 5]  [1 2]  minfreq:  (1)  [8]
 put  [ 1:7]  key:  [5 6]  [3 5]  [6 2]  [9 6]  [2 5]  [1 3]  [4 2]  [8 1]  [12 2]  [10 5]  minfreq:  (1)  [8]
 get [6]  key:  [3 5]  [5 6]  [12 2]  [10 5]  [6 3]  [9 6]  [2 5]  [1 3]  [4 2]  [8 1]  minfreq:  (1)  [8]
 put  [ 9:29]  key:  [3 5]  [5 6]  [10 5]  [6 3]  [9 7]  [2 5]  [1 3]  [4 2]  [8 1]  [12 2]  minfreq:  (1)  [8]
 put  [ 8:21]  key:  [3 5]  [5 6]  [10 5]  [6 3]  [9 7]  [2 5]  [1 3]  [4 2]  [8 2]  [12 2]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [5]  key:  [3 5]  [5 7]  [12 2]  [10 5]  [6 3]  [9 7]  [2 5]  [1 3]  [4 2]  [8 2]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 6:30]  key:  [6 4]  [9 7]  [2 5]  [1 3]  [4 2]  [8 2]  [12 2]  [10 5]  [5 7]  [3 5]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 1:12]  key:  [3 5]  [5 7]  [2 5]  [1 4]  [4 2]  [8 2]  [12 2]  [10 5]  [6 4]  [9 7]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [10]  key:  [3 5]  [5 7]  [2 5]  [1 4]  [4 2]  [8 2]  [12 2]  [10 6]  [6 4]  [9 7]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 4:15]  key:  [9 7]  [2 5]  [1 4]  [4 3]  [8 2]  [12 2]  [10 6]  [6 4]  [3 5]  [5 7]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 7:22]  key:  [3 5]  [5 7]  [7 1]  [12 2]  [6 4]  [9 7]  [2 5]  [1 4]  [4 3]  [8 2]  minfreq:  (1)  [7]
 put  [ 11:26]  key:  [5 7]  [3 5]  [6 4]  [9 7]  [2 5]  [1 4]  [4 3]  [8 2]  [12 2]  [11 1]  minfreq:  (1)  [11]
 put  [ 8:17]  key:  [4 3]  [8 3]  [12 2]  [11 1]  [6 4]  [9 7]  [2 5]  [1 4]  [3 5]  [5 7]  minfreq:  (1)  [11]
 put  [ 9:29]  key:  [4 3]  [8 3]  [12 2]  [11 1]  [6 4]  [9 8]  [2 5]  [1 4]  [3 5]  [5 7]  minfreq:  (1)  [11]
 get [5]  key:  [3 5]  [5 8]  [12 2]  [11 1]  [6 4]  [9 8]  [2 5]  [1 4]  [4 3]  [8 3]  minfreq:  (1)  [11]
 put  [ 3:4]  key:  [3 6]  [5 8]  [9 8]  [2 5]  [1 4]  [4 3]  [8 3]  [12 2]  [11 1]  [6 4]  minfreq:  (1)  [11]
 put  [ 11:30]  key:  [6 4]  [9 8]  [2 5]  [1 4]  [4 3]  [8 3]  [12 2]  [11 2]  [5 8]  [3 6]  minfreq:  (2)  [11]  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 get [12]

*/

/*


 key:  minfreq:  (1)  (2)
 put  [ 10:13]  key:  [10 1]  minfreq:  (1)  [10]  (2)
 put  [ 3:17]  key:  [10 1]  [3 1]  minfreq:  (1)  [3]  [10]  (2)
 put  [ 6:11]  key:  [10 1]  [3 1]  [6 1]  minfreq:  (1)  [6]  [3]  [10]  (2)
 put  [ 10:5]  key:  [10 2]  [3 1]  [6 1]  minfreq:  (1)  [6]  [3]  (2)  [10]
 put  [ 9:10]  key:  [9 1]  [10 2]  [3 1]  [6 1]  minfreq:  (1)  [9]  [6]  [3]  (2)  [10]
 get [13]  key:  [10 2]  [3 1]  [6 1]  [9 1]  minfreq:  (1)  [9]  [6]  [3]  (2)  [10]
 put  [ 2:19]  key:  [10 2]  [3 1]  [6 1]  [9 1]  [2 1]  minfreq:  (1)  [2]  [9]  [6]  [3]  (2)  [10]
 get [2]  key:  [2 2]  [10 2]  [3 1]  [6 1]  [9 1]  minfreq:  (1)  [9]  [6]  [3]  (2)  [2]  [10]
 get [3]  key:  [9 1]  [2 2]  [10 2]  [3 2]  [6 1]  minfreq:  (1)  [9]  [6]  (2)  [3]  [2]  [10]
 put  [ 5:25]  key:  [2 2]  [5 1]  [10 2]  [3 2]  [6 1]  [9 1]  minfreq:  (1)  [5]  [9]  [6]  (2)  [3]  [2]  [10]
 get [8]  key:  [5 1]  [10 2]  [3 2]  [6 1]  [9 1]  [2 2]  minfreq:  (1)  [5]  [9]  [6]  (2)  [3]  [2]  [10]
 put  [ 9:22]  key:  [3 2]  [6 1]  [9 2]  [2 2]  [5 1]  [10 2]  minfreq:  (1)  [5]  [6]  (2)  [9]  [3]  [2]  [10]
 put  [ 5:5]  key:  [5 2]  [10 2]  [3 2]  [6 1]  [9 2]  [2 2]  minfreq:  (1)  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 put  [ 1:30]  key:  [3 2]  [6 1]  [9 2]  [2 2]  [5 2]  [1 1]  [10 2]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [11]  key:  [1 1]  [10 2]  [3 2]  [6 1]  [9 2]  [2 2]  [5 2]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 put  [ 9:12]  key:  [2 2]  [5 2]  [1 1]  [10 2]  [3 2]  [6 1]  [9 3]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [7]  key:  [6 1]  [9 3]  [2 2]  [5 2]  [1 1]  [10 2]  [3 2]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [5]  key:  [2 2]  [5 3]  [1 1]  [10 2]  [3 2]  [6 1]  [9 3]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [8]  key:  [3 2]  [6 1]  [9 3]  [2 2]  [5 3]  [1 1]  [10 2]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [9]  key:  [1 1]  [10 2]  [3 2]  [6 1]  [9 4]  [2 2]  [5 3]  minfreq:  (1)  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 put  [ 4:30]  key:  [10 2]  [3 2]  [6 1]  [9 4]  [2 2]  [5 3]  [1 1]  [4 1]  minfreq:  (1)  [4]  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 put  [ 9:3]  key:  [4 1]  [10 2]  [3 2]  [6 1]  [9 5]  [2 2]  [5 3]  [1 1]  minfreq:  (1)  [4]  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [9]  key:  [2 2]  [5 3]  [1 1]  [4 1]  [10 2]  [3 2]  [6 1]  [9 6]  minfreq:  (1)  [4]  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [10]  key:  [2 2]  [5 3]  [1 1]  [4 1]  [10 3]  [3 2]  [6 1]  [9 6]  minfreq:  (1)  [4]  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 get [10]  key:  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  [10 4]  [3 2]  [6 1]  minfreq:  (1)  [4]  [1]  [6]  (2)  [5]  [9]  [3]  [2]  [10]
 put  [ 6:14]  key:  [2 2]  [5 3]  [1 1]  [4 1]  [10 4]  [3 2]  [6 2]  [9 6]  minfreq:  (1)  [4]  [1]  (2)  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 3:1]  key:  [1 1]  [4 1]  [10 4]  [3 3]  [6 2]  [9 6]  [2 2]  [5 3]  minfreq:  (1)  [4]  [1]  (2)  [6]  [5]  [9]  [3]  [2]  [10]
 get [3]  key:  [5 3]  [1 1]  [4 1]  [10 4]  [3 4]  [6 2]  [9 6]  [2 2]  minfreq:  (1)  [4]  [1]  (2)  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 10:11]  key:  [3 4]  [6 2]  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  [10 5]  minfreq:  (1)  [4]  [1]  (2)  [6]  [5]  [9]  [3]  [2]  [10]
 get [8]  key:  [10 5]  [3 4]  [6 2]  [9 6]  [2 2]  [5 3]  [1 1]  [4 1]  minfreq:  (1)  [4]  [1]  (2)  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 2:14]  key:  [3 4]  [6 2]  [9 6]  [2 3]  [5 3]  [1 1]  [4 1]  [10 5]  minfreq:  (1)  [4]  [1]  (2)  [6]  [5]  [9]  [3]  [2]  [10]
 get [1]  key:  [9 6]  [2 3]  [5 3]  [1 2]  [4 1]  [10 5]  [3 4]  [6 2]  minfreq:  (1)  [4]  (2)  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [5]  key:  [4 1]  [10 5]  [3 4]  [6 2]  [9 6]  [2 3]  [5 4]  [1 2]  minfreq:  (1)  [4]  (2)  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [4]  key:  [2 3]  [5 4]  [1 2]  [4 2]  [10 5]  [3 4]  [6 2]  [9 6]  minfreq:  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 11:4]  key:  [11 1]  [10 5]  [3 4]  [6 2]  [9 6]  [1 2]  [2 3]  [5 4]  [4 2]  minfreq:  (1)  [11]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 12:24]  key:  [4 2]  [12 1]  [2 3]  [5 4]  [6 2]  [9 6]  [1 2]  [11 1]  [10 5]  [3 4]  minfreq:  (1)  [12]  [11]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 5:18]  key:  [4 2]  [12 1]  [2 3]  [5 5]  [6 2]  [9 6]  [1 2]  [11 1]  [10 5]  [3 4]  minfreq:  (1)  [12]  [11]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [13]  key:  [2 3]  [5 5]  [4 2]  [12 1]  [10 5]  [3 4]  [6 2]  [9 6]  [1 2]  [11 1]  minfreq:  (1)  [12]  [11]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 7:23]  key:  [1 2]  [7 1]  [10 5]  [3 4]  [6 2]  [9 6]  [2 3]  [5 5]  [4 2]  [12 1]  minfreq:  (1)  [7]  [12]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [8]  key:  [2 3]  [5 5]  [4 2]  [12 1]  [1 2]  [7 1]  [10 5]  [3 4]  [6 2]  [9 6]  minfreq:  (1)  [7]  [12]  (2)  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [12]  key:  [1 2]  [7 1]  [10 5]  [3 4]  [6 2]  [9 6]  [2 3]  [5 5]  [4 2]  [12 2]  minfreq:  (1)  [7]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 3:27]  key:  [4 2]  [12 2]  [2 3]  [5 5]  [6 2]  [9 6]  [1 2]  [7 1]  [10 5]  [3 5]  minfreq:  (1)  [7]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 2:12]  key:  [7 1]  [10 5]  [3 5]  [6 2]  [9 6]  [1 2]  [2 4]  [5 5]  [4 2]  [12 2]  minfreq:  (1)  [7]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [5]  key:  [2 4]  [5 6]  [4 2]  [12 2]  [1 2]  [7 1]  [10 5]  [3 5]  [6 2]  [9 6]  minfreq:  (1)  [7]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 2:9]  key:  [12 2]  [2 5]  [5 6]  [4 2]  [9 6]  [1 2]  [7 1]  [10 5]  [3 5]  [6 2]  minfreq:  (1)  [7]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 13:4]  key:  [2 5]  [5 6]  [4 2]  [12 2]  [13 1]  [10 5]  [3 5]  [6 2]  [9 6]  [1 2]  minfreq:  (1)  [13]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 8:18]  key:  [8 1]  [2 5]  [5 6]  [4 2]  [12 2]  [1 2]  [10 5]  [3 5]  [6 2]  [9 6]  minfreq:  (1)  [8]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 1:7]  key:  [9 6]  [1 3]  [10 5]  [3 5]  [6 2]  [12 2]  [8 1]  [2 5]  [5 6]  [4 2]  minfreq:  (1)  [8]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [6]  key:  [4 2]  [12 2]  [8 1]  [2 5]  [5 6]  [6 3]  [9 6]  [1 3]  [10 5]  [3 5]  minfreq:  (1)  [8]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 9:29]  key:  [3 5]  [6 3]  [9 7]  [1 3]  [10 5]  [5 6]  [4 2]  [12 2]  [8 1]  [2 5]  minfreq:  (1)  [8]  (2)  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 8:21]  key:  [10 5]  [3 5]  [6 3]  [9 7]  [1 3]  [2 5]  [5 6]  [4 2]  [12 2]  [8 2]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [5]  key:  [4 2]  [12 2]  [8 2]  [2 5]  [5 7]  [6 3]  [9 7]  [1 3]  [10 5]  [3 5]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 6:30]  key:  [9 7]  [1 3]  [10 5]  [3 5]  [6 4]  [12 2]  [8 2]  [2 5]  [5 7]  [4 2]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 1:12]  key:  [4 2]  [12 2]  [8 2]  [2 5]  [5 7]  [6 4]  [9 7]  [1 4]  [10 5]  [3 5]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 get [10]  key:  [9 7]  [1 4]  [10 6]  [3 5]  [6 4]  [12 2]  [8 2]  [2 5]  [5 7]  [4 2]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 4:15]  key:  [10 6]  [3 5]  [6 4]  [9 7]  [1 4]  [2 5]  [5 7]  [4 3]  [12 2]  [8 2]  minfreq:  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  [10]
 put  [ 7:22]  key:  [4 3]  [12 2]  [8 2]  [2 5]  [5 7]  [6 4]  [9 7]  [1 4]  [7 1]  [3 5]  minfreq:  (1)  [7]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 put  [ 11:26]  key:  [4 3]  [12 2]  [8 2]  [2 5]  [5 7]  [6 4]  [9 7]  [1 4]  [11 1]  [3 5]  minfreq:  (1)  [11]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 put  [ 8:17]  key:  [11 1]  [3 5]  [6 4]  [9 7]  [1 4]  [2 5]  [5 7]  [4 3]  [12 2]  [8 3]  minfreq:  (1)  [11]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 put  [ 9:29]  key:  [3 5]  [6 4]  [9 8]  [1 4]  [11 1]  [5 7]  [4 3]  [12 2]  [8 3]  [2 5]  minfreq:  (1)  [11]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 get [5]  key:  [3 5]  [6 4]  [9 8]  [1 4]  [11 1]  [5 8]  [4 3]  [12 2]  [8 3]  [2 5]  minfreq:  (1)  [11]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 put  [ 3:4]  key:  [12 2]  [8 3]  [2 5]  [5 8]  [4 3]  [9 8]  [1 4]  [11 1]  [3 6]  [6 4]  minfreq:  (1)  [11]  (2)  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 put  [ 11:30]  key:  [2 5]  [5 8]  [4 3]  [12 2]  [8 3]  [11 2]  [3 6]  [6 4]  [9 8]  [1 4]  minfreq:  (2)  [11]  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]  (2)  [11]  [8]  [12]  [4]  [1]  [6]  [5]  [9]  [3]  [2]
 get [12]



*/

/*


 put  [ 10:13]  key:  [10 1]
 put  [ 3:17]  key:  [3 1]  [10 1]
 put  [ 6:11]  key:  [6 1]  [3 1]  [10 1]
 put  [ 10:5]  key:  [10 2]  [6 1]  [3 1]
 put  [ 9:10]  key:  [10 2]  [9 1]  [6 1]  [3 1]
 get [13]  key:  [10 2]  [9 1]  [6 1]  [3 1]
 put  [ 2:19]  key:  [10 2]  [2 1]  [9 1]  [6 1]  [3 1]
 get [2]  key:  [2 2]  [10 2]  [9 1]  [6 1]  [3 1]
 get [3]  key:  [3 2]  [2 2]  [10 2]  [9 1]  [6 1]
 put  [ 5:25]  key:  [3 2]  [2 2]  [10 2]  [5 1]  [9 1]  [6 1]
 get [8]  key:  [3 2]  [2 2]  [10 2]  [5 1]  [9 1]  [6 1]
 put  [ 9:22]  key:  [9 2]  [3 2]  [2 2]  [10 2]  [5 1]  [6 1]
 put  [ 5:5]  key:  [5 2]  [9 2]  [3 2]  [2 2]  [10 2]  [6 1]
 put  [ 1:30]  key:  [5 2]  [9 2]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 get [11]  key:  [5 2]  [9 2]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 put  [ 9:12]  key:  [9 3]  [5 2]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 get [7]  key:  [9 3]  [5 2]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 get [5]  key:  [5 3]  [9 3]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 get [8]  key:  [5 3]  [9 3]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 get [9]  key:  [9 4]  [5 3]  [3 2]  [2 2]  [10 2]  [1 1]  [6 1]
 put  [ 4:30]  key:  [9 4]  [5 3]  [3 2]  [2 2]  [10 2]  [4 1]  [1 1]  [6 1]
 put  [ 9:3]  key:  [9 5]  [5 3]  [3 2]  [2 2]  [10 2]  [4 1]  [1 1]  [6 1]
 get [9]  key:  [9 6]  [5 3]  [3 2]  [2 2]  [10 2]  [4 1]  [1 1]  [6 1]
 get [10]  key:  [9 6]  [10 3]  [5 3]  [3 2]  [2 2]  [4 1]  [1 1]  [6 1]
 get [10]  key:  [9 6]  [10 4]  [5 3]  [3 2]  [2 2]  [4 1]  [1 1]  [6 1]
 put  [ 6:14]  key:  [9 6]  [10 4]  [5 3]  [6 2]  [3 2]  [2 2]  [4 1]  [1 1]
 put  [ 3:1]  key:  [9 6]  [10 4]  [3 3]  [5 3]  [6 2]  [2 2]  [4 1]  [1 1]
 get [3]  key:  [9 6]  [3 4]  [10 4]  [5 3]  [6 2]  [2 2]  [4 1]  [1 1]
 put  [ 10:11]  key:  [9 6]  [10 5]  [3 4]  [5 3]  [6 2]  [2 2]  [4 1]  [1 1]
 get [8]  key:  [9 6]  [10 5]  [3 4]  [5 3]  [6 2]  [2 2]  [4 1]  [1 1]
 put  [ 2:14]  key:  [9 6]  [10 5]  [3 4]  [2 3]  [5 3]  [6 2]  [4 1]  [1 1]
 get [1]  key:  [9 6]  [10 5]  [3 4]  [2 3]  [5 3]  [1 2]  [6 2]  [4 1]
 get [5]  key:  [9 6]  [10 5]  [5 4]  [3 4]  [2 3]  [1 2]  [6 2]  [4 1]
 get [4]  key:  [9 6]  [10 5]  [5 4]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]
 put  [ 11:4]  key:  [9 6]  [10 5]  [5 4]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]  [11 1]
 put  [ 12:24]  key:  [9 6]  [10 5]  [5 4]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]  [12 1]  [11 1]
 put  [ 5:18]  key:  [9 6]  [5 5]  [10 5]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]  [12 1]  [11 1]
 get [13]  key:  [9 6]  [5 5]  [10 5]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]  [12 1]  [11 1]
 put  [ 7:23]  key:  [9 6]  [5 5]  [10 5]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]  [7 1]  [12 1]
 get [8]  key:  [9 6]  [5 5]  [10 5]  [3 4]  [2 3]  [4 2]  [1 2]  [6 2]  [7 1]  [12 1]
 get [12]  key:  [9 6]  [5 5]  [10 5]  [3 4]  [2 3]  [12 2]  [4 2]  [1 2]  [6 2]  [7 1]
 put  [ 3:27]  key:  [9 6]  [3 5]  [5 5]  [10 5]  [2 3]  [12 2]  [4 2]  [1 2]  [6 2]  [7 1]
 put  [ 2:12]  key:  [9 6]  [3 5]  [5 5]  [10 5]  [2 4]  [12 2]  [4 2]  [1 2]  [6 2]  [7 1]
 get [5]  key:  [5 6]  [9 6]  [3 5]  [10 5]  [2 4]  [12 2]  [4 2]  [1 2]  [6 2]  [7 1]
 put  [ 2:9]  key:  [5 6]  [9 6]  [2 5]  [3 5]  [10 5]  [12 2]  [4 2]  [1 2]  [6 2]  [7 1]


 put  [ 13:4]  key:  [5 6]  [9 6]  [2 5]  [3 5]  [12 2]  [4 2]  [1 2]  [6 2]  [13 1]  [7 1]
 put  [ 8:18]  key:  [5 6]  [9 6]  [2 5]  [3 5]  [12 2]  [4 2]  [1 2]  [6 2]  [8 1]  [13 1]
 put  [ 1:7]  key:  [5 6]  [9 6]  [2 5]  [3 5]  [1 3]  [12 2]  [4 2]  [6 2]  [8 1]  [13 1]
 get [6]  key:  [5 6]  [9 6]  [2 5]  [3 5]  [6 3]  [1 3]  [12 2]  [4 2]  [8 1]  [13 1]
 put  [ 9:29]  key:  [9 7]  [5 6]  [2 5]  [3 5]  [6 3]  [1 3]  [12 2]  [4 2]  [8 1]  [13 1]
 put  [ 8:21]  key:  [9 7]  [5 6]  [2 5]  [3 5]  [6 3]  [1 3]  [8 2]  [12 2]  [4 2]  [13 1]
 get [5]  key:  [5 7]  [9 7]  [2 5]  [3 5]  [6 3]  [1 3]  [8 2]  [12 2]  [4 2]  [13 1]
 put  [ 6:30]  key:  [5 7]  [9 7]  [2 5]  [3 5]  [6 4]  [1 3]  [8 2]  [12 2]  [4 2]  [13 1]
 put  [ 1:12]  key:  [5 7]  [9 7]  [2 5]  [3 5]  [1 4]  [6 4]  [8 2]  [12 2]  [4 2]  [13 1]
 get [10]



*/
